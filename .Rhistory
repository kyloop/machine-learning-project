head(ToothGrowth)
ToothGrowth
library(ggplot2)
class(ToothGrowth$dose)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y~x)
fit<-lm(y~x)
summary(fit)
mtcars
mpg<-(mtcars$mpg)
wt<-(mtcars$wt)
fit<-lm(mpg~wt)
fit
mean.wt<-mean(wt)
mean.wt
predict(fit,mean.wt,interval = "confidence")
predict(fit,data.frame(x=mean(wt)),interval = "confidence")
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=mean(x)), interval="confidence")
data.frame(x=mean(x))
mean.wt
data.frame(mean.wt)
predict(fit,data.frame(mean.wt), interval="confidence")
predict(fit,data.frame(x=mean(x)), interval="confidence")
data.frame(x=mean(x))
mean.wt<-data.frame(mean.wt)
predict(fit,mean.wt interval="confidence")
predict(fit,mean.wt,interval="confidence")
x
y
predict(fit,data.frame(x=3), interval="prediction")
?qt
ft
fit
fit$df.residual
wtOvr2 <- mtcars$wt / 2
fit <- lm(mtcars$mpg ~ wtOvr2)
mtcars$wt
mtcars$wt/2
ft
fit
summary(fit)
summary(fit)$coef
summary(fit)$coefficients
summary(fit)$coefficients[2,4]
fit$df
fit$df.residual
summary(fit)
coef[2,1] - qt(.975, df = fit$df) * coef[2,2]
wtOvr2 <- mtcars$wt / 2
fit <- lm(mtcars$mpg ~ wtOvr2)
coef <- summary(fit)$coefficients
coef[2,1] - qt(.975, df = fit$df) * coef[2,2]
qt(.975, df = fit$df)
fit$df.residual
c(-1,1)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
x_meter <- x / 100
fit_meter <- lm(y ~ x_meter)
fit_meter$coef
fit_meter$coef[2]
summary(fit_meter)
fit_meter$coefficients
head(mtcars)
data(mtcars)
mpg
fit <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
summary(fit)
summary(fit)$coef
summary(fit)$coef[3]
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(y~x)
dfbeta(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(y~x)
dfbetas(fit)
mtcars
fit
summary(fit)
?step
head(mtcars)
class(mtcars)
class(mtcars$mpg)
class(mtcars$mpg)
class(mtcars$am)
class(mtcars$am)
mtcars$am<-factor(mtcars$am)
mtcars$cyl<-factor(mtcars$cyl)
class(mtcars$cyl)
class(mtcars$vs)
class(mtcars$vs)
mtcars$vs
mtcars$vs<-factor(mtcars$vs)
class(mtcars$vs)
class(mtcars$hp)
head(mtcars)
getwd()
setwd("./github/hw8o1")
getwd()
data.frame(c(1,2,3,4,5))
data.frame(c(1,2,3,4,5),c("a,"b))
data.frame(,c(1,2,3,4,5))
data.frame(1,c(1,2,3,4,5))
nrow(training1)
dim(training1)
training1<-read.csv("training.csv",header = TRUE,na.strings = c("NA","#DIV/0!"))
testing1<-read.csv("testing.csv",header = TRUE,na.strings = c("NA","#DIV/0!"))
head(training1)
nrow(training1)
ncol(training1)
training1$classe
table(training1$classe)
summary(training1$classe)
sum(training1,2)
-xxapply(training1,2,FUN = sum)
xx<-apply(training1,2,FUN = sum)
xx<-apply(training1,2,sum)
xx<-apply(training1,1,sum)
xx<-apply(training1,2, function(i) any(is.na(i)))
head(xx)
xx<-training1[,apply(training1,2, function(i) any(is.na(i)))]
head(xx)
names(xx)
names(training1)
summary(xx)
names(xx)
xxx<-xx[,c(1:7)]
names(xxx)
xxx<-xx[,-c(1:7)]
names(xxx)
xx[1:7]
xx[1:7,]
xx[,1:7]
head(xx[,-c(1:7)])
head(xx[,c(1:7)])
dim(xx$kurtosis_roll_belt)
nrow(xx$kurtosis_roll_belt)
xx$kurtosis_roll_belt
install.packages("part")
install.packages("rpart.plot")
install.packages("fancyRpartPPlot")
install.packages("e1071")
install.packages("randomForest")
randomForest::randomForest()
library(randomForest)
randomForest()
install.packages("randomForest.ddR")
install.packages("randomForest")
